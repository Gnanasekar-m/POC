import {
  UPDATE_SCHEDULER_STATE,
  SEARCH_TECH_DATA_EMPTY,
  EXPAND_TEAM_AFTER_EVENT_REFRESH,
  CREAT_EVENT_REQUESTED,
  DELETE_EVENT_REQUESTED,
  EVENT_SUBJECT_REQUESTED,
  ASSIGN_TO_TREE_REQUESTED,
  GET_EVENTS_AFTER_LAUNCH,
  GET_EVENT_IDS_ERRORED,
  LOAD_EVENT_IDS_ERRORED,
  LOAD_WIDE_RANGE_EVENTS,
  UPDATE_EVENT_REQUESTED,
  FILTERING_EVENTS_STARTED,
  WORKORDER_EVENTS_REQUESTED,
  ADV_TECH_SEARCH_REQUESTED,
  SEARCH_TECHNICIANS_REQUESTED,
  FILTER_TECHNICIAN_REQUESTED,
  MULTIASSIGN_EVENTS_REQUESTED,
  WO_MATCH_TECH_SKILLS_REQUESTED,
  EVENT_SUBJECT_LOADED,
  EVENT_SAVING_COMPLETE,
  DELETE_EVENT_COMPLETED,
  ADV_TECH_SEARCH_LOADED,
  WORKORDER_EVENTS_LOADED,
  EVENTS_LOADING_COMPLETE,
  ASSIGN_TO_TREE_COMPLETED,
  SEARCH_TECHNICIANS_LOADED,
  MULTIASSIGN_EVENTS_UPDATED,
  WO_MATCH_TECH_SKILLS_LOADED,
  CREAT_EVENT_ERROR,
  UPDATE_EVENT_ERROR,
  DELETE_EVENT_ERRORED,
  EVENT_SUBJECT_ERRORED,
  EVENTS_LOADING_ERRORED,
  ASSIGN_TO_TREE_ERRORED,
  ADV_TECH_SEARCH_ERRORED,
  FILTERING_EVENTS_FAILED,
  FILTERING_EVENTS_ERRORED,
  WORKORDER_EVENTS_ERRORED,
  FILTER_TECHNICIAN_ERRORED,
  MULTIASSIGN_EVENTS_ERRORED,
  SEARCH_TECHNICIANS_ERRORED,
  FILTERING_TECHNICIANS_FAILED,
  WO_MATCH_TECH_SKILLS_API_ERRORED,
  ADV_TECH_SEARCH_NO_WORKORDER_SELECTION
} from "constants/ActionConstants";

export function schedulerStateChanged(value, type) {
  return { changed: value, type };
}

export function schedulerDeleteEventChanged(value, type, callBack) {
  return { callBack, changed: value, type };
}

export function reducer(state = null, action) {
  const { changed = {}, type } = action;
  if (!changed) {
    return state;
  }

  // Hack to ensure we have a different state, so that we update the scheduler view.
  const { newViewState } = changed;
  const { newViewState: prevViewState } = state || {};
  if (newViewState && newViewState === prevViewState) {
    if (Math.sign(newViewState) < 0) {
      changed.newViewState = newViewState - 100;
    } else {
      changed.newViewState = newViewState + 100;
    }
  }
  switch (type) {
    case UPDATE_SCHEDULER_STATE:
      return { ...state, ...changed };

    case LOAD_WIDE_RANGE_EVENTS:
    case CREAT_EVENT_REQUESTED:
    case DELETE_EVENT_REQUESTED:
    case UPDATE_EVENT_REQUESTED:
    case GET_EVENTS_AFTER_LAUNCH:
    case EVENT_SUBJECT_REQUESTED:
    case ASSIGN_TO_TREE_REQUESTED:
    case FILTERING_EVENTS_STARTED:
    case ADV_TECH_SEARCH_REQUESTED:
    case WORKORDER_EVENTS_REQUESTED:
    case FILTER_TECHNICIAN_REQUESTED:
    case MULTIASSIGN_EVENTS_REQUESTED:
    case SEARCH_TECHNICIANS_REQUESTED:
    case WO_MATCH_TECH_SKILLS_REQUESTED:
      return { ...state, loading: true };

    case EVENT_SUBJECT_LOADED:
    case EVENT_SAVING_COMPLETE:
    case DELETE_EVENT_COMPLETED:
    case SEARCH_TECH_DATA_EMPTY:
    case ADV_TECH_SEARCH_LOADED:
    case EVENTS_LOADING_COMPLETE:
    case WORKORDER_EVENTS_LOADED:
    case ASSIGN_TO_TREE_COMPLETED:
    case SEARCH_TECHNICIANS_LOADED:
    case MULTIASSIGN_EVENTS_UPDATED:
    case WO_MATCH_TECH_SKILLS_LOADED:
    case EXPAND_TEAM_AFTER_EVENT_REFRESH:

    case CREAT_EVENT_ERROR:
    case UPDATE_EVENT_ERROR:
    case DELETE_EVENT_ERRORED:
    case GET_EVENT_IDS_ERRORED:
    case EVENT_SUBJECT_ERRORED:
    case EVENTS_LOADING_ERRORED:
    case ASSIGN_TO_TREE_ERRORED:
    case LOAD_EVENT_IDS_ERRORED:
    case FILTERING_EVENTS_FAILED:
    case ADV_TECH_SEARCH_ERRORED:
    case FILTERING_EVENTS_ERRORED:
    case WORKORDER_EVENTS_ERRORED:
    case FILTER_TECHNICIAN_ERRORED:
    case MULTIASSIGN_EVENTS_ERRORED:
    case SEARCH_TECHNICIANS_ERRORED:
    case FILTERING_TECHNICIANS_FAILED:

    case WO_MATCH_TECH_SKILLS_API_ERRORED:
    case ADV_TECH_SEARCH_NO_WORKORDER_SELECTION:
      return { ...state, loading: false };
    default:
      return state;
  }
}
