
name: IncrementChange

on:
  push

jobs:
 IncrementChange:
    runs-on: ubuntu-latest  
    
    steps:
      - uses: actions/checkout@v2
      - uses: sfdx-actions/setup-sfdx@v1
        with:
          sfdx-auth-url: ${{ secrets.AUTH_SECRET }}
      - name: Checkout
        run: |
             git clone https://github.com/Gnanasekar-m/POC.git
      - name: diff-tree
        run: |       
             cd POC
             git diff-tree --no-commit-id --name-only -r ${{ github.sha }} > log.txt
             grep -v "yml" log.txt > yml.txt
             sed 's/All_Component_DX\/*//g' yml.txt > cmp.txt
             sed 's/trigger-meta.xml*/trigger/g' cmp.txt > trigger.txt 
             sed 's/cls-meta.xml*/cls/g' trigger.txt  > cls.txt
             exit 0
          
      - uses: pCYSl5EDgo/cat@master
        id: gitlog
        with:
         path: POC/cls.txt

      - run: |
            echo  Before replace $TEXT
        env:
         TEXT: ${{ steps.gitlog.outputs.text }}

     
      - name: Find and Replace-comma
        uses: shitiomatic/str-replace@master
        with:
          find: '\s'
          replace: ","
          include: POC/cls.txt
     
      - run: |
            echo Find and Replace-comma $TEXT

      - name : Find and Replace- double quote
        run : |
             sed '$ s/,$//' POC/cls.txt > POC/text.txt  

      - uses: pCYSl5EDgo/cat@master  
        id: Log
        with:
           path: POC/text.txt
      - run: |
             echo Replaced with comma and double quote
             echo $TEXT 

        env:
         TEXT: ${{ steps.Log.outputs.text }}

      - name: cls-meta or trigger
        if: contains(steps.Log.outputs.text , 'cls') || contains(steps.Log.outputs.text , 'trigger')
        run: |
             echo components path to be deployed are ${{ steps.Log.outputs.text }}

      
      - name : deploy to org
        run: |
            sfdx force:auth:sfdxurl:store -f ./authurl -s -a DH3
            ls
            cd POC/All_Component_DX
            sfdx force:source:deploy -p "${{ steps.Log.outputs.text }}"   -u DH3

      - name: TestRun      
        id: testrun
        run: |
          sfdx force:apex:test:run -l RunAllTestsInOrg -d ./report/ -c  -w 10 -u DH3 -r json >> result.json
 
      - id: set_var
        run: |
          content=`cat ./result.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=resultJson::$content"
      - name: passRate_fails 
        if:  fromJson(steps.set_var.outputs.resultJson).result.summary.passRate != '100%'
        run: |
             echo passRate ${{fromJson(steps.set_var.outputs.resultJson).result.summary.passRate}} not equal to '100%'
             exit 1
             
      - name: passRate_passes
        run: |
              echo testclass run successful and passRate is ${{fromJson(steps.set_var.outputs.resultJson).result.summary.passRate}}
              
      - name: testRunCoverage_fails  
        if:  fromJson(steps.set_var.outputs.resultJson).result.summary.testRunCoverage <= 85
        run: |
          echo current testRunCoverage is ${{fromJson(steps.set_var.outputs.resultJson).result.summary.testRunCoverage}} which is less than 76%
          exit 1
        
      - name: testRunCoverage_passes
        run: |
              echo testRunCoverage passes with ${{fromJson(steps.set_var.outputs.resultJson).result.summary.testRunCoverage}}%
     
      - name: orgWideCoverage_fails  
        if:  fromJson(steps.set_var.outputs.resultJson).result.summary.orgWideCoverage <= 80
        run: |
          echo failed due to current orgWideCoverage passes is ${{fromJson(steps.set_var.outputs.resultJson).result.summary.orgWideCoverage}} which is less than 80%
          exit 1
          
      - name: OWD_passes
        run: |
              echo orgWideCoverage is ${{fromJson(steps.set_var.outputs.resultJson).result.summary.orgWideCoverage}}
                
     
      - name: Jobcompletion
        run: echo completed 
              
           
  


            
          
       
             

              

