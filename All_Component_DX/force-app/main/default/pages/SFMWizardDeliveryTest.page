<apex:page title="Wizard Delivery" standardStylesheets="false" controller="SFMWizardDeliveryTestController" showHeader="false"  sidebar="false" >

<script>
    // TODO: Read from settings
    var __SVMX_LOAD_VERSION__ = "micro";
    var __SVMX_CLIENT_LIB_PATH__ = "{!URLFOR($Resource.SVMXC__com_servicemax_client_lib, 'com.servicemax.client.lib')}";
    
    var SVMXJsr = {
        
        
        JsrGetDisplayTags : function(request, callback, context){
            var result = {
                
            }, me = this;
            
            setTimeout(function(){
                me.processResult(result, {status : true}, callback, context);
            }, 1);
        },
        
        JsrGetWizardInfo : function(request, callback, context){
            var requestStr = SVMX.toJSON(request), me = this;
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SFMWizardDeliveryTestController.JsrGetWizardInfo}', requestStr, 
                function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
            );
        },

        processResult : function(result, event, callback, context){
            var ret = {success : false};
            if(event.status == true){
                ret = SVMX.toObject(result);
            }
            callback.call(context, ret, event);
        }
   };
   
</script>

<script type="text/javascript" src="{!URLFOR($Resource.SVMXC__com_servicemax_client_lib, 'com.servicemax.client.lib/src/bootstrap.js')}"></script>

<script>

jQuery(document).ready(function(){
    var client_runtime        = "{!URLFOR($Resource.SVMXC__com_servicemax_client_runtime, '')}";
    var client_sfwdelivery    = "{!URLFOR($Resource.SVMXC__com_servicemax_client_sfwdelivery, '')}";
    var client_mvc            = "{!URLFOR($Resource.SVMXC__com_servicemax_client_mvc, '')}";
    var client_sal            = "{!URLFOR($Resource.SVMXC__com_servicemax_client_sal, '')}";
    var client_sal_sfw_model  = "{!URLFOR($Resource.SVMXC__com_servicemax_client_sal_sfw_model, '')}";
    var ui_components         = "{!URLFOR($Resource.SVMXC__com_servicemax_client_ui_components, '')}";
    var client_sfmconsole     = "{!URLFOR($Resource.SVMXC__com_servicemax_client_sfmconsole, '')}";
    var ui_themes             = "{!URLFOR($Resource.SVMXC__com_servicemax_client_ui_themes, '')}";          
    
    var config = {  "title" : "SFW Delivery", "version" : "1.0.0",
    
        "modules" : [
            { "id" : "com.servicemax.client.sfmconsole",                    "version" : "1.0.0" , "codebase" : client_sfmconsole },
            { "id" : "com.servicemax.client.runtime",                       "version" : "1.0.0" , "codebase" : client_runtime },
            { "id" : "com.servicemax.client.sal",                           "version" : "1.0.0" , "codebase" : client_sal },
            { "id" : "com.servicemax.client.sal.sfw.model",                 "version" : "1.0.0" , "codebase" : client_sal_sfw_model },
            { "id" : "com.servicemax.client.mvc",                           "version" : "1.0.0" , "codebase" : client_mvc },
            { "id" : "com.servicemax.client.ui.themes",                     "version" : "1.0.0" , "codebase" : ui_themes },
            { "id" : "com.servicemax.client.sfwdelivery",                   "version" : "1.0.0" , "codebase" : client_sfwdelivery },
            { "id" : "com.servicemax.client.ui.components",                 "version" : "1.0.0" , "codebase" : ui_components },
        ],
        
        "app-config" : {
            "application-id" : "console",
            "svmx-api-version" : "9.0",
            "sal-service-runtime-mode" : "VISUAL_FORCE",
            "enable-cache" : true,
            "enable-log" : true,
            "svmx-sfw-open-in-window": true,
            "svmx-sfm-sal-model-use-jsr" : true
        },
        
        "platform-config" : {
        
        }
    }
    
    // create a console logger
    new com.servicemax.client.lib.services.BrowserConsoleLogTarget();
        
    // create the client instance
    var client = new com.servicemax.client.lib.core.Client();
        
    // set up the session id
    client.addApplicationParameter("session-id", "{!GETSESSIONID()}");
    
    setTimeout(function(){
        client.run({configType : "local", data : config, loadVersion : __SVMX_LOAD_VERSION__ });
    }, 200);
    
    ///////////////////////////// start - handling of hide/show for the SFDC sidebar /////////////////////
    /**
     * @ Indresh M S
     * The life cycle of the 'client_display_root' div is maintained by ExtJs. And because of that,
     * whenever SFDC triggers a page layout change, ExtJs does not react to it. It has to be explicitly
     * told to re-layout.
     * In order to achieve that, we will have to fall back on the elements  from SFDC that are involved
     * in the layout change.
     * !!! WARNING: It is possible that SFDC may adjust id's of the elements refered to below. Make sure that this
     * feature continues to run by testing against every SFDC upgrade.
     */
    $("#handlebarContainer").click(function(evt){
        resize();
    });
    
    function resize(){
        setTimeout(function(){
            $("#client_display_root").width($("#AppBodyHeader").width() - $("#sidebarCell").width() - 40);
            
            try { 
                SVMX.getCurrentApplication().defaultSearchInstance.onResize(
                    { width : $("#client_display_root").width(), 
                      height : $("#client_display_root").height()
                    }
                );
                SVMX.getCurrentApplication().defaultSearchInstance.getRoot().doLayout(); 
             } catch(e){}
        }, 5);
    }
    
    resize();
    ///////////////////////////// end - handling of hide/show for the SFDC sidebar //////////////////////
});

</script>

<body>
    <div id="client_display_root"></div>
</body>

</apex:page>